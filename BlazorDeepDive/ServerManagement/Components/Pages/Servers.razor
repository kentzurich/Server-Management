@page "/servers"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />

<div class="container-fluid text-center">
    <div class="row w-25">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card">
                    <img class="card-img-top" src="@($"/images/{city}.png")" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick="@(() => SelectCity(city))">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />
<br />

<ServerComponent @rendermode="InteractiveServer"></ServerComponent>


<ul>
    @foreach(var server in servers)
    {
        <li>
            @server.Name in @server.City is 
            <span style="color:@(server.IsOnline ? "green" : "red")">
                @(server.IsOnline ? "online" : "offline")
            </span>.
            &nbsp;
            <a href="/servers/@server.Id" class="btn btn-link">Edit</a>
            &nbsp;
            <EditForm 
                Model="server" 
                FormName="@($"form-server-{server.Id}")" 
                OnValidSubmit="() => { DeleteServer(server.Id); }">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </li>
    }
</ul>

<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Imus");

    private List<string> cities = CitiesRepository.GetCities();

    private string selectedCity = "Imus";

    private void DeleteServer(int serverId)
    {
        if(serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.Refresh();
        }
    }

    private void SelectCity(string cityName)
    {
        this.selectedCity = cityName;

        this.servers = ServersRepository.GetServersByCity(this.selectedCity);
    }
}

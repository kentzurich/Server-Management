@page "/servers"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />

<div class="container-fluid text-center">
    <div class="row w-25">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase) ? "border-primary" : string.Empty)">
                    <img class="card-img-top" src="@($"/images/{city}.png")" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick="@(() => SelectCity(city))">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />
<br />

@* <ServerComponent @rendermode="InteractiveServer"></ServerComponent> *@

<div class="input-group mb-3">
    <input 
        type="text" 
        class="form-control" 
        placeholder="Search Servers"
        @bind-value="FilterServer"
        @bind-value:event="oninput" />
    <button class="btn btn-outline-secondary" type="button" id="btnSearch" @onclick="HandleSearch">Search</button>
</div>

<br />

<ul>
    @foreach(var server in servers)
    {
        <li @key="@server.Id">
            @server.Name in @server.City is 
            <span style="color:@(server.IsOnline ? "green" : "red")">
                @(server.IsOnline ? "online" : "offline")
            </span>.
            &nbsp;
            <a href="/servers/@server.Id" class="btn btn-link">Edit</a>
            &nbsp;
            <EditForm 
                Model="server" 
                FormName="@($"form-server-{server.Id}")" 
                OnValidSubmit="() => { DeleteServer(server.Id); }">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </li>
    }
</ul>

<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

<p>
    <button 
        class="btn btn-secondary"
        @onclick="@(() =>
        {
            this.servers.Insert(0, new Server { Name = "Server A-2", City = "Imus", IsOnline = true });
        })">
        Add Server 2
    </button>
</p>

@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Imus");

    private List<string> cities = CitiesRepository.GetCities();

    private string selectedCity = "Imus";

    private string _filterServer = string.Empty;
    private string FilterServer 
    { 
        get => _filterServer;
        set
        {
            _filterServer = value;

            this.servers = ServersRepository.SearchServers(_filterServer);

            this.selectedCity = string.Empty;
        }
    }

    private void DeleteServer(int serverId)
    {
        if(serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.Refresh();
        }
    }

    private void SelectCity(string cityName)
    {
        this.selectedCity = cityName;

        this.servers = ServersRepository.GetServersByCity(this.selectedCity);
    }

    private void HandleSearch()
    {
        this.servers = ServersRepository.SearchServers(FilterServer);

        this.selectedCity = string.Empty;
    }
}
